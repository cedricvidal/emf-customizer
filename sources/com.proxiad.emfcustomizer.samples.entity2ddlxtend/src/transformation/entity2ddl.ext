import ddl;
import entity;

extension entity::Extensions reexport;

schema( Domain d ) :
	let s = new Schema :
	s.setName(d.name.toUpperCase()) ->
	s.types.addAll(d.types.typeSelect(Datatype).collect(e|e.columnType())) ->
	s.table.addAll(d.entities().table()) ->
	s
	;

table( Entity e) :
	let t = new Table :
	t.setName(e.name.plural().toUpperCase()) ->
	t.column.addAll(e.features.select(e|{e.type}.typeSelect(Datatype).size > 0).column()) ->
	t
	;

column( Feature f ) :
	let c = new Column :
	c.setName(f.name) ->
	c.setType({f.type}.typeSelect(Datatype).columnType().first()) ->
	c
	;

cached columnType( entity::Datatype d ) :
	let d2 = new ddl::DataType :
	d2.setName(d.name.columnName()) ->
	d2
	;

columnName( String n ) :
	n == "String" ? "VARCHAR" :
	(n == "Integer" ? "NUMBER" :
	n.toUpperCase())
	;

plural( String s ) :
	s + "s"
	;
